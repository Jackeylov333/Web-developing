{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst TasksContainer = ({\n  socket\n}) => {\n  _s();\n  const [tasks, setTasks] = useState({});\n  useEffect(() => {\n    function fetchTasks() {\n      fetch(\"http://localhost:4000/api\").then(res => res.json()).then(data => {\n        console.log(data);\n        setTasks(data);\n      });\n    }\n    fetchTasks();\n  }, []);\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    if (!destination) return;\n    if (destination.index === source.index && destination.droppableId === source.droppableId) return;\n    socket.emit(\"taskDragged\", {\n      source,\n      destination\n    });\n  };\n  useEffect(() => {\n    // 监听服务器发送的任务更新事件\n    socket.on(\"tasks\", updatedTasks => {\n      setTasks(updatedTasks);\n    });\n\n    // 监听服务器发送的任务删除事件\n    socket.on(\"deleteTask\", deletedTaskData => {\n      setTasks(currentTasks => {\n        const {\n          taskId,\n          category\n        } = deletedTaskData;\n        const updatedCategoryTasks = currentTasks[category].items.filter(task => task.id !== taskId);\n        return {\n          ...currentTasks,\n          [category]: {\n            ...currentTasks[category],\n            items: updatedCategoryTasks\n          }\n        };\n      });\n    });\n\n    // 清理函数，在组件卸载时取消事件监听\n    return () => {\n      socket.off(\"tasks\");\n      socket.off(\"deleteTask\");\n    };\n  }, [socket]);\n  const deleteTask = (taskId, category) => {\n    socket.emit(\"deleteTask\", {\n      taskId,\n      category\n    });\n  };\n  useEffect(() => {\n    socket.on(\"tasks\", data => setTasks(data));\n  }, [socket]);\n};\n_s(TasksContainer, \"RUYD+Q2hJlQSn9H+bfrIlyETYVs=\");\n_c = TasksContainer;\nexport default TasksContainer;\nvar _c;\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"names":["React","useState","useEffect","Link","DragDropContext","Droppable","Draggable","TasksContainer","socket","_s","tasks","setTasks","fetchTasks","fetch","then","res","json","data","console","log","handleDragEnd","destination","source","index","droppableId","emit","on","updatedTasks","deletedTaskData","currentTasks","taskId","category","updatedCategoryTasks","items","filter","task","id","off","deleteTask","_c","$RefreshReg$"],"sources":["D:/Desktop/web/todo-list/Web-developing/client/src/components/TasksContainer.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst TasksContainer = ({ socket }) => {\r\n    const [tasks, setTasks] = useState({});\r\n\r\n    useEffect(() => {\r\n        function fetchTasks() {\r\n            fetch(\"http://localhost:4000/api\")\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    setTasks(data);\r\n                });\r\n        }\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    \r\n\r\n    const handleDragEnd = ({ destination, source }) => {\r\n        if (!destination) return;\r\n        if (\r\n            destination.index === source.index &&\r\n            destination.droppableId === source.droppableId\r\n        )\r\n            return;\r\n    \r\n        socket.emit(\"taskDragged\", {\r\n            source,\r\n            destination,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 监听服务器发送的任务更新事件\r\n        socket.on(\"tasks\", (updatedTasks) => {\r\n            setTasks(updatedTasks);\r\n        });\r\n\r\n        // 监听服务器发送的任务删除事件\r\n        socket.on(\"deleteTask\", (deletedTaskData) => {\r\n            setTasks((currentTasks) => {\r\n                const { taskId, category } = deletedTaskData;\r\n                const updatedCategoryTasks = currentTasks[category].items.filter(\r\n                    (task) => task.id !== taskId\r\n                );\r\n                return {\r\n                    ...currentTasks,\r\n                    [category]: {\r\n                        ...currentTasks[category],\r\n                        items: updatedCategoryTasks,\r\n                    },\r\n                };\r\n            });\r\n        });\r\n\r\n        // 清理函数，在组件卸载时取消事件监听\r\n        return () => {\r\n            socket.off(\"tasks\");\r\n            socket.off(\"deleteTask\");\r\n        };\r\n    }, [socket]);\r\n\r\n    const deleteTask = (taskId, category) => {\r\n        socket.emit(\"deleteTask\", { taskId, category });\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"tasks\", (data) => setTasks(data));\r\n    }, [socket]);\r\n\r\n    \r\n};\r\n\r\nexport default TasksContainer;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAE3E,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,SAASU,UAAUA,CAAA,EAAG;MAClBC,KAAK,CAAC,2BAA2B,CAAC,CAC7BC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBN,QAAQ,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC;IACV;IACAL,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMQ,aAAa,GAAGA,CAAC;IAAEC,WAAW;IAAEC;EAAO,CAAC,KAAK;IAC/C,IAAI,CAACD,WAAW,EAAE;IAClB,IACIA,WAAW,CAACE,KAAK,KAAKD,MAAM,CAACC,KAAK,IAClCF,WAAW,CAACG,WAAW,KAAKF,MAAM,CAACE,WAAW,EAE9C;IAEJhB,MAAM,CAACiB,IAAI,CAAC,aAAa,EAAE;MACvBH,MAAM;MACND;IACJ,CAAC,CAAC;EACN,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZ;IACAM,MAAM,CAACkB,EAAE,CAAC,OAAO,EAAGC,YAAY,IAAK;MACjChB,QAAQ,CAACgB,YAAY,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACAnB,MAAM,CAACkB,EAAE,CAAC,YAAY,EAAGE,eAAe,IAAK;MACzCjB,QAAQ,CAAEkB,YAAY,IAAK;QACvB,MAAM;UAAEC,MAAM;UAAEC;QAAS,CAAC,GAAGH,eAAe;QAC5C,MAAMI,oBAAoB,GAAGH,YAAY,CAACE,QAAQ,CAAC,CAACE,KAAK,CAACC,MAAM,CAC3DC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAC1B,CAAC;QACD,OAAO;UACH,GAAGD,YAAY;UACf,CAACE,QAAQ,GAAG;YACR,GAAGF,YAAY,CAACE,QAAQ,CAAC;YACzBE,KAAK,EAAED;UACX;QACJ,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACTxB,MAAM,CAAC6B,GAAG,CAAC,OAAO,CAAC;MACnB7B,MAAM,CAAC6B,GAAG,CAAC,YAAY,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAAC7B,MAAM,CAAC,CAAC;EAEZ,MAAM8B,UAAU,GAAGA,CAACR,MAAM,EAAEC,QAAQ,KAAK;IACrCvB,MAAM,CAACiB,IAAI,CAAC,YAAY,EAAE;MAAEK,MAAM;MAAEC;IAAS,CAAC,CAAC;EACnD,CAAC;EAED7B,SAAS,CAAC,MAAM;IACZM,MAAM,CAACkB,EAAE,CAAC,OAAO,EAAGT,IAAI,IAAKN,QAAQ,CAACM,IAAI,CAAC,CAAC;EAChD,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;AAGhB,CAAC;AAACC,EAAA,CAtEIF,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAwEpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}